type User @model @auth(rules: [{allow: private, operations: [read]}, {allow: groups, groups: ["Admins"], operations: [read, create, update, delete]}, {allow: groups, groups: ["Teachers"], operations: [read, create, update]}]) {
  id: ID!
  email: AWSEmail!
  name: String
  phone: String
  address: String
  picture: String
  description: String
  Notifications: [Notification] @hasMany(indexName: "byUsers", fields: ["id"])
  Courses: [Course] @manyToMany(relationName: "CourseUsers")
}

type Notification @model @auth(rules: [{allow: private, operations: [read]}, {allow: groups, groups: ["Teachers"], operations: [read, create, update, delete]}, {allow: groups, groups: ["Admins"], operations: [read, create, update, delete]}]) {
  id: ID!
  title: String
  message: String
  courseID: ID @index(name: "byCourses")
  userID: ID @index(name: "byUsers")
}

type Course @model @auth(rules: [{allow: private, operations: [read]}, {allow: groups, groups: ["Teachers"], operations: [read, create, update, delete]}, {allow: groups, groups: ["Admins"], operations: [read, create, update, delete]}, {allow: groups, groups: ["Students"], operations: [read]}, {allow: groups, groups: ["Parents"], operations: [read]}]) {
  id: ID!
  name: String!
  code: String!
  visibility: Boolean!
  start_date: AWSDateTime
  end_date: AWSDateTime
  description: String
  main_image: String
  images: [String]
  credit: Int
  departmentID: ID @index(name: "byDepartments")
  Event: Event @belongsTo
  Users: [User] @manyToMany(relationName: "CourseUsers")
  Notifications: [Notification] @hasMany(indexName: "byCourses", fields: ["id"])
}

type Department @model @auth(rules: [{allow: groups, groups: ["Admins"], operations: [read, create, update, delete]}, {allow: private, operations: [read]}]) {
  id: ID!
  name: String!
  code: String!
  description: String
  Courses: [Course] @hasMany(indexName: "byDepartments", fields: ["id"])
}

type Event @model @auth(rules: [{allow: groups, groups: ["Admins"], operations: [read, create, update, delete]}, {allow: private, operations: [read]}]) {
  id: ID!
  event: AWSJSON
  Course: Course @hasOne
} 